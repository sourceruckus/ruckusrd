-*- mode: outline -*-

So, why is using a non-retentive squashfs rootfs with a conf directory so
awesome?  Good question.  The more I use it, the more I like it.  You might
find you like it to.  Especially if you're constantly compiling things and
messing up your nice clean installation.

 1. It's a magic undo button.  First and foremost, it gives you the ability
    to just go ahead and install whatever you want w/out any fear of
    breaking your system.  So, you just installed a new version of some
    package and it completely broke the universe?  No biggee, just reboot
    and you'll have the system back up and running in no time.  Oh, the new
    version works greate and you want it to be a permanent change?  Just
    install it using a DESTDIR of /mnt/root-true/conf. 

 2. Quickly see what you've changed since the last time you baselined a
    squashfs.img.  This makes keeping track of changes very easy.

 3. Installing rapidly.  You can build up multiple machines using the same
    squashfs.img very rapidly and just tweak a few things (e.g., hostname)
    via the conf dir.

 4. Super easy upgrades.  Just stick a new squashfs.img in /mnt/root-true,
    maybe clean things out of conf, and reboot.

 5. Just go ahead and kill power w/out doing a safe reboot.  I dare you.  As
    long as /mnt/root-true is mounted read-only (the default), you don't
    ever have to wory about power outage (and an itchy power button finger)
    corrupting your root filesystem.  Yup, "safe shutdown" just got reduced
    to "remove power".

 6. Shared rootfs image accross multiple virtual machines.  This advanced
    technique involves using the same device containing a squashfs.img as
    the squashdev for multiple virtual machines (read-only!) that each have
    their own independent root devices (e.g., with conf).  This makes it
    incredibly easy to quickly go from having no virtual machines to having
    a whole fleet of them.  And you can upgrade the squashfs.img once and
    upgrade all of the virtual machines at once.  (NOTE: I've only ever done
    this in Xen, but I assume the same facilities are available using other
    virtualization tools).
