-*- mode: outline -*-

* Creating squashfs.img

To create a squashfs.img from an existing installation:

 1. Create rootfs image file:

    # mkdir squashfs
    # dd if=/dev/zero of=squashfs/rootfs.img bs=1M seek=20K count=0
    # mkfs.ext4 squashfs/rootfs.img

 2. Put stuff on it.  This can be done by restoring from one or more dump
    images (see dump(8)), by extracting from a tar file or other archive, or by
    installing directly into the image file.

    # mkdir t
    # mount -o loop squashfs/rootfs.img t
    # cd t
    # restore -rly /path/to/dump.img
    ...

 2.1 strip? remove things?

 2.2 fill w/ zeros, remove

    # cd t
    # dd if=/dev/zero of=FOO
    ...
    # rm FOO
    # cd ..

 2.3 umount t

 3. Create squashfs:

    # mksquashfs squashfs squashfs.img

 4. Put squashfs.img at / of your boot device.


* Make it bootable

EXTLINUX is nice and easy for this... put an example menu config in here?

Use ISOLINUX for DVD, SYSLINUX for FAT flash (haven't tried), or EXTLINUX for
ext2/3/4 rootfs.


mkdir -p boot/extlinux

copy kernel into boot

add kernel modules to conf if needed

 x. copy syslinux com32 files into boot/extlinux

    # cp -va \
        /usr/local/share/syslinux/{vesamenu,chain,mboot,libcom32,libutil}.c32 \
        boot/extlinux/


install extlinux

# extlinux --install boot/extlinux

install bootloader on drive

# cat /usr/local/share/syslinux/mbr.bin > /dev/sdf

make sure partition is "active"

copy example extlinux config into boot/extlinux

edit it


* Booting
UUID
LABEL
CDLABEL


* The conf dir


* Advanced usage
** to_ram
** squashfs=
** squashdev=
** conf=
*** example use case (lots of virtual machines sharing squashfs)
