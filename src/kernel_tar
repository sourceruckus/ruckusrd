#!/bin/bash
#
# RuckusRD - a super awesome, yet simple, mkinitrd replacement
#
# Copyright 2012-2021 Michael D Labriola <michael.d.labriola@gmail.com>
#
# Licensed under the GPLv3. See the file COPYING for details. 
#
# This script is a utility for creating a self-extracting installer for a built
# Linux kernel.  First run `kernel_builder`, then run this.
#
export SRP_ROOT=$PWD/FOO

VERSION=$(basename $SRP_ROOT/lib/modules/*)

filename=$PWD/kernel-installer-$VERSION.sh

# detect when we're running out of a source tree and avoid PATH in that case
if [ -f $(dirname $0)/linuxrc ]; then
    extractenator=$(dirname $0)/extractenator
else
    extractenator=extractenator
fi


usage()
{
    if [ -n "$*" ]; then
        echo ERROR: $*
        echo
    fi
    echo "kernel_tar - a self-extracting kernel installer creator"
    echo "Copyright (C) 2012-2021 Michael D Labriola <michael.d.labriola@gmail.com>"
    echo
    echo "usage: `basename $0` OPTIONS [-- EXTRACTENATOR_OPTIONS]"
    echo
    echo "kernel_tar uses extractenator to create a self-extracting kernel installer using"
    echo "the build output of kernel_builder (the FOO directory).  Extractenator is"
    echo "provided with its required --filename (kernel-installer-x.y.z.sh), --script (a"
    echo "generated installation script), and payload (the FOO directory).  Other"
    echo "extractenator options can be passed into the child process by appending them to"
    echo "the command line after a '--' (used to indicate end of option parsing).  See"
    echo "extractenator --help for more info."
    echo
    echo "Once created, the installer is run by simply executing it.  The installer script"
    echo "cleans /lib/modules and /usr/src/headers, then copies the payload (initially"
    echo "extracted to current working directory) into /."
}


# call getopt
#
# NOTE: This handles spacing out arguments correctly for the case statement
#       below and checks for unknown flags.  Required flags are checked for
#       below.
#
# NOTE: The set -- command causes the resulting output of getopt to replace the
#       current positional arguments (e.g, $1, $2).
#
__opts=$(getopt -un $(basename $0) \
    -o h \
    --long help -- $@)
if [ $? != 0 ]; then
    echo
    usage
    exit 1
fi
set -- $__opts

# parse the new positional arguments
while true; do
    case "$1" in
	--)
            # done parsing
            shift
            break
            ;;
	*)
            usage
            exit 1
            ;;
    esac
done


# setup a tmpdir
tmpdir=`mktemp -dt \`basename $0\`-XXXX`

# create the installer script
#
# FIXME: should check for VERSION symlink, remove what it points to if
#        detected.
#
# FIXME: why do we tar FOO to stdout, pipe that into tar to install?  was it
#        just to avoid having to retest something else when i split
#        extracenator into a seperate script?  We could do 'cp -a' or something
#        similar instead... right?
#
cat > $tmpdir/installer <<EOF
echo -n "removing preexisting modules in /lib/modules/$VERSION... "
rm -rf /lib/modules/$VERSION && echo DONE || { echo FAIL; exit 1; }

echo -n "removing preexisting headers in /usr/src/linux-headers-$VERSION... "
rm -rf /usr/src/linux-headers-$VERSION && echo DONE || { echo FAIL; exit 1; }

echo -n "extracting archive... "
(tar -C FOO -c . | tar -x --no-same-owner --no-same-permissions -C /) && echo DONE || { echo FAIL; exit 1; }

echo
echo "!! don't forget to update your bootloader (e.g., grub, extlinux) !!"
echo

EOF

# NOTE: $* is so we can pass additional arguments to extractenator (e.g.,
#       --comp).
#
$extractenator -f $filename -s $tmpdir/installer FOO $* || exit 1

rm -rf $tmpdir
exit 0
