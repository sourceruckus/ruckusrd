#!/bin/bash
#
# This script should get executed by the build system to create lower.sqsh,
# which should get installed by the install target.

. ruckusrd.conf


# Make directory structure
#
# NOTE: We're just going to create bin and ceate sbin as a compatability
#       symlink if it doesn't exist later on in case something explicitly calls
#       somethings from /sbin (e.g., /sbin/modprobe).
#
# NOTE: Same goes for /usr/bin and /usr/sbin.
#
mkdir -vp initramfs/{bin,dev,sys,proc,usr,run,sysroot,etc,lib} || exit 1


# Copy all the PROGS into the initramfs
echo '********** COPYING PROGS TO INITRAMFS ******************************************'
tar -C initramfs -vxf ../subprojects/busybox.tar
#tar -C initramfs -vxf ../subprojects/mdadm.tar
#tar -C initramfs -vxf ../subprojects/lvm2.tar
#tar -C initramfs -vxf ../subprojects/eudev.tar


# Make a couple symlinks
echo '********** MAKING SYMLINKS *****************************************************'
[ ! -d initramfs/bin/bsh ] && (ln -vs sh initramfs/bin/bash || exit 1)
[ ! -d initramfs/sbin ] && (ln -vs bin initramfs/sbin || exit 1)
[ ! -d initramfs/usr/bin ] && (ln -vs ../bin initramfs/usr/bin || exit 1)
[ ! -d initramfs/usr/sbin ] && (ln -vs ../sbin initramfs/usr/sbin || exit 1)
# Fixup lib vs lib64
#
# NOTE: We symlink lib64->lib here to ensure that our runtime linker works on
#       x86, x86_64 multilib, and pure64.  There does exist the possibility
#       that we're copying in binaries with conflicting runtime libs, though
#       (e.g., say mdadm is 32bit on host system, it will put the 32bit
#       libc.so.6 in /lib which will break all the 64bi binaries...).
#
# FIXME: at least add a check for this to warn the user...
#
# FIXME: much less of an issue w/out host system binaries... we do still have
#        to do the symlink, because our built-in binaries are probably linked
#        against host system libs that might be in either dir...
#
[ ! -d initramfs/lib64 ] && (ln -vs lib initramfs/lib64 || exit 1)


# Copy all required shared libs
echo '********** COPYING NEEDED LIBS TO INITRAMFS ************************************'
DEPLIBS=$(find initramfs -type f -exec ldd {} 2>/dev/null \; \
    | sed 's|.*=>||g' | awk '/\// { print $1 }' | sort | uniq)
#
# NOTE: Deref symlinks, otherwise we'll end up with a bunch of broken symlinks
#       instead of actual libraries for every single lib.
#
for f in $DEPLIBS; do
    cp -va --dereference $f initramfs/lib/ || exit 1
done


# Bail if we've created any broken symlinks
echo '********** CHECKING FOR BROKEN SYMLINKS ****************************************'
go="find initramfs -xtype l -printf '%p '"
echo $go
blarg=$(eval $go)
if [ -n "$blarg" ]; then
    echo "ERROR: broken link(s) detected: $blarg"
    exit 1
fi


# Strip debug info
echo '********** STRIPPING UNNEEDED SYMBOLS FROM IMAGE *******************************'
go="find initramfs -type f -exec strip --strip-unneeded {} \;"
echo $go
eval $go


# Install our iniramfs' init script
echo '********** COPYING LINUXRC TO INITRAMFS ****************************************'
cp -va linuxrc initramfs/init &&
chmod -v a+x initramfs/init || exit 1


# FIXME: Most mkinitrd scripts I've looked at copy /etc/modprobe.conf and
#        /etc/modprobe.d from the host system to the initramfs...  My initial
#        testing indicates that this is not necesary, so I'm not going to do it.
#
# Copy modprobe.conf and friends over
#if [ -e /etc/modprobe.conf ] ; then
#    cp /etc/modprobe.conf initramfs/etc
#fi
#cp -R /etc/modprobe.d initramfs/etc


# Write fstab
cat > initramfs/etc/fstab <<EOF
/dev/root  /         auto    defaults,noatime  0 0
devpts     /dev/pts  devpts  gid=5,mode=620    0 0
tmpfs      /dev/shm  tmpfs   defaults          0 0
proc       /proc     proc    defaults          0 0
sysfs      /sys      sysfs   defaults          0 0
EOF


# Install ruckusrd.conf
cp -va ruckusrd.conf initramfs/ || exit 1

# Create sqsh file
mksquashfs initramfs lower.sqsh -noappend || exit 1
