-*- mode: outline -*-

* For 1.0.0

 - fix all the FIXMEs

 - documentation (html, man)

 - Maybe revamp command-line usage?

 - Maybe add checksum verification of sqsh_layers to linuxrc?  If anything's
   been modified, make a lot of noise and don't boot.

 - Add --with-system-{busybox,e2fsprogs,eudev,lvm2,mdadm,squashfs-tools}
   configure flags.

 - Pretty sure I broke out-of-tree building at some point... need to fix that.

 - Build something into the build system to fetch submodules when building from
   dist tarball.  Right now, you can really only build the subprojects via a
   git clone.  (This means our dist tarballs are currently useless, as we don't
   yet have --with-system-whatever flags...)


* For 0.x

 - Should prefix all our non-standard kernel commandline options w/
   ruckusrd.whatever.  Once we have config-file support, we should be able to
   keep it a bit less verbose, and this will guard us against accidentally
   using the same option as something in the kernel or systemd.  A couple
   should probably stay unprefixed (e.g., root=, quiet).

 - Consider adding `rescue` to kick-off a dialog-based rootfs recovery of some
   sort?  Or maybe just add a /bin/rescue script to run via `initramsys` shell?

 - Udev rules to rename network interfaces like systemd, so pre-boot network
   config can actually have the right device names?

   https://systemd.io/PREDICTABLE_INTERFACE_NAMES/
   https://wiki.archlinux.org/title/Network_configuration#Change_interface_name


* proposed for 0.23

 - For long-lasting systems, constantly installing updates, doing regular work,
   etc, eventually results in essentially the entire collection of sqsh_layers
   being replaced in upper with new files.  So keeping the original sqsh_layers
   around and overlaying eventually turns into a bit of a resource (cpu and
   space) waste.

   Instead of doing sqsh-commit and sqsh-merge, the user may choose to
   "un-sqsh_layer" back into a "regular" root filesystem.  Perhaps provide
   sqsh_layers2regular and regular2sqsh_layers?

 - Sqsh_layer maintenance scripts for all the things that require rebooting.

   In particular, sqsh-commit (to create new sqsh from upper) and sqsh-merge (to
   merge all lower layers into a single sqsh).  And actually, maint might make
   more sense... since it will have all the layers mounted.  Although, if we
   want to do a full reboot after re-layering (to ensure the bootloader cfg
   changes happens before continuing), that won't work via maint, so initramsys
   would be better suited.

   Would still have to tackle the "now go update your bootloader config"
   dilemma.  Should we sed changes into extlinux.conf, syslinux.conf, or
   reconfigure grub?  Sounds dicey.  I suppose printing out a message telling
   the user EXACTLY what to go put in their bootloader config is the best
   compromise.  Or we could *attempt* to find syslinux.conf and sed changes in
   there if found, otherwise tell the user what to change?  Worst case, they
   don't do it, and their system doesn't boot?

   Should we add kernel params to do this, too?  Like sqsh_layer-commit and
   sqsh_layer-merge?  Have them auto-run and leave the user with a prompt to
   update bootloader config and reboot (if non syslinux), or just go right
   ahead and autoreboot after updating syslinux.conf (ha, don't forget to make
   sure to remove sqsh_layer-commit and sqsh_layer-merge before rebooting)?

 - Can ruckusrd detect a secondary ESP and keep it in sync with the primary?
   This wouldn't be as good as automatically making them match after dorking
   around with ESP1 (e.g., installing a new kernel, tweaking syslinux.conf),
   but it's better than doing nothing and leaving it up to the user (in which
   case, they'll never match)

   New boot param: redundant-esp=LABEL1,LABEL2,...


* for 0.22.x

 - also, what happens to root=ZFS if a disk is bad/missing?  does it start the
   pool in degraded mode and continue booting?  or is it hosed?  test

 - firstboot groomer adds localadmin user but doesn't create a homedir... was
   that on purpose?


* for 0.22

 - release new firmwarenator, adjust submodule

 - initramsys-installer testing, specifically EFI setup

 - update README.md somewhere with pandoc installed

 - upgrade microcode/firmware again... thanks to recent security vulerabilities
