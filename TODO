-*- mode: outline -*-

* For 1.0.0

 - fix all the FIXMEs

 - documentation (html, man)

 - Maybe revamp command-line usage?

 - Maybe add checksum verification of sqsh_layers to linuxrc?  If anything's
   been modified, make a lot of noise and don't boot.

 - Add --with-system-{busybox,e2fsprogs,eudev,lvm2,mdadm,squashfs-tools}
   configure flags.


* For 0.14

 - Add config-file support (/mnt/root-true/ruckusrd.conf?).  Retain kernel
   commandline parsing, but only needed to override what's in the config file.
   This will allow us to update config w/out needing to mess with booloader
   config.

 - Should prefix all our non-standard kernel commandline options w/
   ruckusrd.whatever.  Once we have config-file support, we should be able to
   keep it a bit less verbose, and this will guard us against accidentally
   using the same option as something in the kernel or systemd.  A couple
   should probably stay unprefixed (e.g., root=, quiet).

 - Tidy up  linuxrc output.  "quiet"  mode should  be silent to  match expected
   behavior in  most distros.  Perhaps  prefix each  output w/ "ruckusrd:  " or
   something  like that  to differentiate  our initramfs  messages from  kernel
   spew?

 - Should I look into including zfs userland tools on initramfs?  Is this
   needed to support zfs for rootfs?  Might be a perk.  Right now, I'm really
   only providing support for MDRAID/LVM/EXT4... which has been all I need.
   But if I really fall for zfs (which I might), I might want to play with zfs
   for upper layer?  Zfs for upper layer might even help w/ my live
   snapshotting problem... who knows?

 - Add --compressor=xz|lz4|zstd to ruckusrd

   $xz -vzc --check=crc32 > ../initramfs.img
   lz4 -vzc --best --favor-decSpeed > ../initramfs.img

   actually... i can't get a lz4 compressed initramfs to boot... maybe revisit
   this w/ zstd later?

   zstd -vzc

   hmm... can't get those to boot either...  durp, zstd isn't mainlined until
   maybe 5.9.  will revisit then.


* Could happen in a stable release

 - Pretty sure I broke out-of-tree building at some point... need to fix that.

 - Build something into the build system to fetch submodules when building from
   dist tarball.  Right now, you can really only build the subprojects via a
   git clone.  (This means our dist tarballs are currently useless, as we don't
   yet have --with-system-whatever flags...)
